<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src='https://api.mapbox.com/mapbox-gl-js/v2.1.1/mapbox-gl.js'></script>
    <link href='https://api.mapbox.com/mapbox-gl-js/v2.1.1/mapbox-gl.css' rel='stylesheet' />
    <script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.1.0/mapbox-gl-directions.js"></script>
    <link rel="stylesheet" href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.1.0/mapbox-gl-directions.css" type="text/css">     

    <title>Map</title>
    <style>
        body{
            margin: 0;
            padding: 0;
        }
        #map{
            height: 100vh;
            width: 100vw;
        }
        #instructions {
            position: absolute;
            margin: 20px;
            width: 25%;
            top: 0;
            bottom: 20%;
            padding: 20px;
            background-color: rgba(255, 255, 255, 0.7);
            overflow-y: scroll;
            font-family: sans-serif;
            font-size: 0.8em;
            line-height: 2em;
        }

        .duration {
            font-size: 2em;
        }
        @media (max-width: 576px){
            #instructions{
                width: 75%;
                font-size: 1.1rem;
                bottom: 60%;
            }
        }
    </style>
</head>
<body>
    <div id='map'>
    </div>
    <div id="instructions">
    
    </div>
    <h2 style="display: none;" id="end"><%=end %></h2>
    <h2 style="display: none;" id="start"><%=start %></h2>
    <script>
        mapboxgl.accessToken = 'pk.eyJ1IjoiY2hpbTIiLCJhIjoiY2tsZXBjOWI1MTJvczJ2bWpiZWE5azNlNyJ9.-LB_CjjYIksqNZTdiSmFNg';

            const map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/streets-v11',
            center: [76.952783,28.4258344], // starting point
            zoom: 14,
        });
        map.addControl(new mapboxgl.NavigationControl());

        var startdata = document.getElementById('start').innerHTML.split(","); 
        var start = []
        for(i=0; i< startdata.length;i++){
            start.push(parseFloat(startdata[i]))
        } // starting point

        var canvas = map.getCanvasContainer();

        function getRoute(end) {
             var url = 'https://api.mapbox.com/directions/v5/mapbox/driving/' + start[0] + ',' + start[1] + ';' + end[0] + ',' + end[1] + '?steps=true&geometries=geojson&access_token=' + mapboxgl.accessToken;


            var req = new XMLHttpRequest();
             req.open('GET', url, true);
             req.onload =  function() {
                var json = JSON.parse(req.response);
                var data = json.routes[0];
                var route = data.geometry.coordinates;
                var geojson = {
                type: 'Feature',
                properties: {},
                geometry: {
                    type: 'LineString',
                    coordinates: route
                }
                };
                // if the route already exists on the map, reset it using setData
                if (map.getSource('route')) {
                map.getSource('route').setData(geojson);
                } else { // otherwise, make a new request
                map.addLayer({
                    id: 'route',
                    type: 'line',
                    source: {
                    type: 'geojson',
                    data: {
                        type: 'Feature',
                        properties: {},
                        geometry: {
                        type: 'LineString',
                        coordinates: geojson
                        }
                    }
                    },
                    layout: {
                    'line-join': 'round',
                    'line-cap': 'round'
                    },
                    paint: {
                    'line-color': '#3887be',
                    'line-width': 5,
                    'line-opacity': 0.75
                    }
                });
                }
                // add turn instructions here at the end
                var instructions = document.getElementById('instructions');
                var steps = data.legs[0].steps;

                var tripInstructions = [];
                for (var i = 0; i < steps.length; i++) {
                tripInstructions.push('<br><li>' + steps[i].maneuver.instruction) + '</li>';
                instructions.innerHTML = '<br><span class="duration">Trip duration: ' + parseInt(Math.floor(data.duration / 60) / 60) + ' hour(s) ' + Math.floor(data.duration / 60) % 60 + ' min  </span>' + tripInstructions;
                }
            };
            req.send();
            }
            map.on('load', function() {
                // make an initial directions request that
                // starts and ends at the same location
                getRoute(start);

                // Add starting point to the map
                map.addLayer({
                    id: 'point',
                    type: 'circle',
                    source: {
                    type: 'geojson',
                    data: {
                        type: 'FeatureCollection',
                        features: [{
                        type: 'Feature',
                        properties: {},
                        geometry: {
                            type: 'Point',
                            coordinates: start
                        }
                        }
                        ]
                    }
                    },
                    paint: {
                    'circle-radius': 10,
                    'circle-color': '#3887be'
                    }
                });

                    var enddata = document.getElementById('end').innerHTML.split(","); 
                    var coords = []
                    for(i=0; i< enddata.length;i++){
                        coords.push(parseFloat(enddata[i]))
                    } // ending point

                    var end = {
                        type: 'FeatureCollection',
                        features: [{
                        type: 'Feature',
                        properties: {},
                        geometry: {
                            type: 'Point',
                            coordinates: coords
                        }
                        }
                        ]
                    };
                    if (map.getLayer('end')) {
                        map.getSource('end').setData(end);
                    } else {
                        map.addLayer({
                        id: 'end',
                        type: 'circle',
                        source: {
                            type: 'geojson',
                            data: {
                            type: 'FeatureCollection',
                            features: [{
                                type: 'Feature',
                                properties: {},
                                geometry: {
                                type: 'Point',
                                coordinates: coords
                                }
                            }]
                            }
                        },
                        paint: {
                            'circle-radius': 10,
                            'circle-color': '#f30'
                        }
                        });
                    }
                    getRoute(coords);
                    });
                
    </script>
</body>
</html>